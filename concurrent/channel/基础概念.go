package main

/**
1.概念
	- go语言的并发模型是CSP，提倡通过通信共享内存而不是通过共享内存而
	  实现通信。
	- 如果说goroutine是go程序并发的执行体，channel就是它们之间的连接。
	- channel是可以让一个goroutine发送特定值到另一个goroutine的通信机制。
	- go的channel是一种特殊的类型。通道像一个传送带或者队列，总是遵循FIFO的规则，
      保证收发数据的顺序。
2.操作
	- 声明channel时需要为其指定元素类型
	- 声明后的通道需要使用make函数初始化
	- 通道有发送（send）,接收（receive），关闭（close）三种操作。
3.关闭通道需要注意
	* 只有在通知接收方goroutine所有的数据都发送完毕的时候才需要关闭通道。通道是可以
      被垃圾回收机制回收的，它和关闭文件是不一样的，在结束操作之后关闭文件是必须要做的，
      但关闭通道不是必须的。
	- 对一个关闭的通道再发送值就会导致panic.
	- 对一个关闭的通道进行接收会一直获取值直到通道为空.
	- 对一个关闭的并且没有值的通道执行接收操作会得到对应类型的零值.
	- 关闭一个已经关闭的通道会导致panic.
*/
